pages = [{"l":"api/index.html","n":"JavaCPP","t":"JavaCPP","d":"","k":"static"},
{"l":"api/_empty_.html","n":"<empty>","t":"package <empty>","d":"<empty>","k":"package"},
{"l":"api/_empty_.html","n":"Main","t":"def Main(incompleteProgramFilePath: String): Unit","d":"<empty>","k":"def"},
{"l":"api/_empty_/Main.html","n":"Main","t":"class Main","d":"<empty>/Main","k":"class"},
{"l":"api/_empty_/Main.html","n":"main","t":"def main(args: Array[String]): Unit","d":"<empty>/Main","k":"def"},
{"l":"api/configuration.html","n":"configuration","t":"package configuration","d":"configuration","k":"package"},
{"l":"api/configuration.html","n":"parseConfiguration","t":"def parseConfiguration(filepath: String): Map[String, FixedDeclaration]","d":"configuration","k":"def"},
{"l":"api/configuration/Assertion.html","n":"Assertion","t":"trait Assertion","d":"configuration/Assertion","k":"trait"},
{"l":"api/configuration/Bottom$.html","n":"Bottom","t":"object Bottom extends Type","d":"configuration/Bottom$","k":"object"},
{"l":"api/configuration/Bottom$.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/Bottom$","k":"def"},
{"l":"api/configuration/Bottom$.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/Bottom$","k":"val"},
{"l":"api/configuration/Bottom$.html","n":"identifier","t":"val identifier: String","d":"configuration/Bottom$","k":"val"},
{"l":"api/configuration/Bottom$.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/Bottom$","k":"val"},
{"l":"api/configuration/Bottom$.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/Bottom$","k":"val"},
{"l":"api/configuration/Bottom$.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/Bottom$","k":"val"},
{"l":"api/configuration/ContainmentAssertion.html","n":"ContainmentAssertion","t":"class ContainmentAssertion(left: Type, right: Type) extends Assertion","d":"configuration/ContainmentAssertion","k":"class"},
{"l":"api/configuration/DeltaBuilderVisitor.html","n":"DeltaBuilderVisitor","t":"class DeltaBuilderVisitor extends VoidVisitorAdapter[MutableDelta]","d":"configuration/DeltaBuilderVisitor","k":"class"},
{"l":"api/configuration/DisjunctiveAssertion.html","n":"DisjunctiveAssertion","t":"class DisjunctiveAssertion(assertions: Vector[Assertion]) extends Assertion","d":"configuration/DisjunctiveAssertion","k":"class"},
{"l":"api/configuration/EquivalenceAssertion.html","n":"EquivalenceAssertion","t":"class EquivalenceAssertion(left: Type, right: Type) extends Assertion","d":"configuration/EquivalenceAssertion","k":"class"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"ExtendsWildcardType","t":"class ExtendsWildcardType(upper: Type, _substitutions: SubstitutionList) extends Type","d":"configuration/ExtendsWildcardType","k":"class"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/ExtendsWildcardType","k":"def"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/ExtendsWildcardType","k":"val"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"identifier","t":"val identifier: String","d":"configuration/ExtendsWildcardType","k":"val"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/ExtendsWildcardType","k":"val"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/ExtendsWildcardType","k":"val"},
{"l":"api/configuration/ExtendsWildcardType.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/ExtendsWildcardType","k":"val"},
{"l":"api/configuration/IntervalType.html","n":"IntervalType","t":"class IntervalType(lower: Type, upper: Type, _substitutions: SubstitutionList) extends Type","d":"configuration/IntervalType","k":"class"},
{"l":"api/configuration/IntervalType.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/IntervalType","k":"def"},
{"l":"api/configuration/IntervalType.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/IntervalType","k":"val"},
{"l":"api/configuration/IntervalType.html","n":"identifier","t":"val identifier: String","d":"configuration/IntervalType","k":"val"},
{"l":"api/configuration/IntervalType.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/IntervalType","k":"val"},
{"l":"api/configuration/IntervalType.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/IntervalType","k":"val"},
{"l":"api/configuration/IntervalType.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/IntervalType","k":"val"},
{"l":"api/configuration/IsClassAssertion.html","n":"IsClassAssertion","t":"class IsClassAssertion(arg: Type) extends Assertion","d":"configuration/IsClassAssertion","k":"class"},
{"l":"api/configuration/IsInterfaceAssertion.html","n":"IsInterfaceAssertion","t":"class IsInterfaceAssertion(arg: Type) extends Assertion","d":"configuration/IsInterfaceAssertion","k":"class"},
{"l":"api/configuration/NormalType.html","n":"NormalType","t":"class NormalType(identifier: String, numArgs: Int, substitutions: SubstitutionList) extends Type","d":"configuration/NormalType","k":"class"},
{"l":"api/configuration/NormalType.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/NormalType","k":"def"},
{"l":"api/configuration/NormalType.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/NormalType","k":"val"},
{"l":"api/configuration/NormalType.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/NormalType","k":"val"},
{"l":"api/configuration/PhiOmegaBuilderVisitor.html","n":"PhiOmegaBuilderVisitor","t":"class PhiOmegaBuilderVisitor extends VoidVisitorAdapter[(MutablePhi, MutableOmega)]","d":"configuration/PhiOmegaBuilderVisitor","k":"class"},
{"l":"api/configuration/SubtypeAssertion.html","n":"SubtypeAssertion","t":"class SubtypeAssertion(left: Type, right: Type) extends Assertion","d":"configuration/SubtypeAssertion","k":"class"},
{"l":"api/configuration/SuperWildcardType.html","n":"SuperWildcardType","t":"class SuperWildcardType(lower: Type, _substitutions: SubstitutionList) extends Type","d":"configuration/SuperWildcardType","k":"class"},
{"l":"api/configuration/SuperWildcardType.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/SuperWildcardType","k":"def"},
{"l":"api/configuration/SuperWildcardType.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/SuperWildcardType","k":"val"},
{"l":"api/configuration/SuperWildcardType.html","n":"identifier","t":"val identifier: String","d":"configuration/SuperWildcardType","k":"val"},
{"l":"api/configuration/SuperWildcardType.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/SuperWildcardType","k":"val"},
{"l":"api/configuration/SuperWildcardType.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/SuperWildcardType","k":"val"},
{"l":"api/configuration/SuperWildcardType.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/SuperWildcardType","k":"val"},
{"l":"api/configuration/Type.html","n":"Type","t":"trait Type","d":"configuration/Type","k":"trait"},
{"l":"api/configuration/Type.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutionList: SubstitutionList): Type","d":"configuration/Type","k":"def"},
{"l":"api/configuration/Type.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/Type","k":"val"},
{"l":"api/configuration/Type.html","n":"identifier","t":"val identifier: String","d":"configuration/Type","k":"val"},
{"l":"api/configuration/Type.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/Type","k":"val"},
{"l":"api/configuration/Type.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/Type","k":"val"},
{"l":"api/configuration/Type.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/Type","k":"val"},
{"l":"api/configuration/TypeParameterIndex.html","n":"TypeParameterIndex","t":"class TypeParameterIndex(source: String, index: Int, substitutions: SubstitutionList) extends Type","d":"configuration/TypeParameterIndex","k":"class"},
{"l":"api/configuration/TypeParameterIndex.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/TypeParameterIndex","k":"def"},
{"l":"api/configuration/TypeParameterIndex.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/TypeParameterIndex","k":"val"},
{"l":"api/configuration/TypeParameterIndex.html","n":"identifier","t":"val identifier: String","d":"configuration/TypeParameterIndex","k":"val"},
{"l":"api/configuration/TypeParameterIndex.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/TypeParameterIndex","k":"val"},
{"l":"api/configuration/TypeParameterIndex.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/TypeParameterIndex","k":"val"},
{"l":"api/configuration/Wildcard$.html","n":"Wildcard","t":"object Wildcard extends Type","d":"configuration/Wildcard$","k":"object"},
{"l":"api/configuration/Wildcard$.html","n":"addSubstitutionLists","t":"def addSubstitutionLists(substitutions: SubstitutionList): Type","d":"configuration/Wildcard$","k":"def"},
{"l":"api/configuration/Wildcard$.html","n":"downwardProjection","t":"val downwardProjection: Type","d":"configuration/Wildcard$","k":"val"},
{"l":"api/configuration/Wildcard$.html","n":"identifier","t":"val identifier: String","d":"configuration/Wildcard$","k":"val"},
{"l":"api/configuration/Wildcard$.html","n":"numArgs","t":"val numArgs: Int","d":"configuration/Wildcard$","k":"val"},
{"l":"api/configuration/Wildcard$.html","n":"substitutions","t":"val substitutions: SubstitutionList","d":"configuration/Wildcard$","k":"val"},
{"l":"api/configuration/Wildcard$.html","n":"upwardProjection","t":"val upwardProjection: Type","d":"configuration/Wildcard$","k":"val"},
{"l":"api/configuration/declaration.html","n":"configuration.declaration","t":"package configuration.declaration","d":"configuration/declaration","k":"package"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"FixedDeclaration","t":"class FixedDeclaration(val identifier: String, val typeParameters: Vector[Vector[Type]], val isFinal: Boolean, val isAbstract: Boolean, val isInterface: Boolean, val extendedTypes: Vector[Type], val implementedTypes: Vector[Type])","d":"configuration/declaration/FixedDeclaration","k":"class"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"extendedTypes","t":"val extendedTypes: Vector[Type]","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"identifier","t":"val identifier: String","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"implementedTypes","t":"val implementedTypes: Vector[Type]","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"isAbstract","t":"val isAbstract: Boolean","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"isFinal","t":"val isFinal: Boolean","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"isInterface","t":"val isInterface: Boolean","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/FixedDeclaration.html","n":"typeParameters","t":"val typeParameters: Vector[Vector[Type]]","d":"configuration/declaration/FixedDeclaration","k":"val"},
{"l":"api/configuration/declaration/MethodSignature.html","n":"MethodSignature","t":"class MethodSignature(parameters: Vector[Type], returnType: Type)","d":"configuration/declaration/MethodSignature","k":"class"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"MissingDeclaration","t":"class MissingDeclaration(val identifier: String, val numParams: Int, val supertypes: Vector[Type], val attributes: Map[String, Type], val methods: Map[String, Vector[MethodSignature]])","d":"configuration/declaration/MissingDeclaration","k":"class"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"addAttributes","t":"def addAttributes(identifier: String, attributeType: Type): MissingDeclaration","d":"configuration/declaration/MissingDeclaration","k":"def"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"addMethod","t":"def addMethod(identifier: String, methodSignature: MethodSignature): MissingDeclaration","d":"configuration/declaration/MissingDeclaration","k":"def"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"addSupertype","t":"def addSupertype(supertype: Type): MissingDeclaration","d":"configuration/declaration/MissingDeclaration","k":"def"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"attributes","t":"val attributes: Map[String, Type]","d":"configuration/declaration/MissingDeclaration","k":"val"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"identifier","t":"val identifier: String","d":"configuration/declaration/MissingDeclaration","k":"val"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"methods","t":"val methods: Map[String, Vector[MethodSignature]]","d":"configuration/declaration/MissingDeclaration","k":"val"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"numParams","t":"val numParams: Int","d":"configuration/declaration/MissingDeclaration","k":"val"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"ofParameters","t":"def ofParameters(i: Int): MissingDeclaration","d":"configuration/declaration/MissingDeclaration","k":"def"},
{"l":"api/configuration/declaration/MissingDeclaration.html","n":"supertypes","t":"val supertypes: Vector[Type]","d":"configuration/declaration/MissingDeclaration","k":"val"},
{"l":"api/configuration/typeresolvers.html","n":"configuration.typeresolvers","t":"package configuration.typeresolvers","d":"configuration/typeresolvers","k":"package"},
{"l":"api/configuration/typeresolvers.html","n":"resolveTypeAndAddToPhi","t":"def resolveTypeAndAddToPhi(phi: MutablePhi, e: Expression): Nothing","d":"configuration/typeresolvers","k":"def"},
{"l":"docs/index.html","n":"JavaCPP","t":"JavaCPP","d":"","k":"static"}];